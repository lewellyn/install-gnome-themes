#!/bin/bash

#
# This script installs the latest versions of some fine GNOME themes into the current user's ".themes" folder.
#
# Get the most recent version of this script at:
#
#     https://github.com/tliron/install-gnome-themes
#
# Copyright 2016-2019 by Tal Liron. MIT-style license:
#
#     https://github.com/tliron/install-gnome-themes/blob/master/LICENSE
#

set -e

#
# Build output is supressed by default. If you want to see it, set the LOG environment var:
#
# 	LOG=/dev/stdout ./install-gnome-themes
#
# Or:
#
# 	LOG=output.log ./install-gnome-themes
#

HERE=$(dirname "$(readlink -f "$0")")
LOG=${LOG:-/dev/null}
THEMES=~/.themes
CACHE_FILE=${CACHE_FILE:-$THEMES/.install-gnome-themes-cache}
WORK=/tmp/install-gnome-themes

. "$HERE/utils.sh"

function the-end () {
	local ERR=$?
	if [ $ERR == 0 ]; then
		message "install-gnome-themes finished successfully"
	else
		message "install-gnome-themes failed!"
	fi
	exit $ERR
}

trap the-end EXIT

#
# Preparation
#

GNOME_VERSION=$(gnome-version)
GTK_VERSION=$(gtk-version)

if [ -z "$GNOME_VERSION" ]; then
	message "Detected GTK $GTK_VERSION."
else
	message "Detected GNOME $GNOME_VERSION, GTK $GTK_VERSION."
fi

GTK_MIN_VERSION=3.22
GTK_MAX_VERSION=3.30

if ! (( $(bc <<< "${GTK_MIN_VERSION} <= ${GTK_VERSION} && ${GTK_VERSION} <= ${GTK_MAX_VERSION}") )) ; then
	message "This script only support GTK versions ${GTK_MIN_VERSION} and up."
	exit 1
fi

OS=$(os-name)

message "Detected $OS operating system."

mkdir --parents "$THEMES"

#
# Themes
#

# Adapta
# https://github.com/tista500/Adapta
# Requirements: autoconf automake inkscape libgdk-pixbuf2.0-dev libglib2.0-dev librsvg2-dev libsass0 libxml2-utils pkg-config sassc
#
# Supports configurations settings, e.g. a variant with colors red500, red300, bluegrey300, bluegrey500:
#
#	ADAPTA_ARGS='
#		--with-selection_color=#F44336
#		--with-accent_color=#90A4AE
#		--with-suggestion_color=#607D8B' \
#		--with-destruction_color=#FF5252' \
#	./install-gnome-themes
AUTOGEN_ARGS="--disable-cinnamon --disable-xfce --disable-mate --disable-openbox --enable-chrome-legacy $ADAPTA_ARGS" \
theme-autogen-prefix github tista500 Adapta master \
	Adapta \
	Adapta-Eta \
	Adapta-Nokto \
	Adapta-Nokto-Eta

# Adwaita Tweaks
# https://github.com/Jazqa/adwaita-tweaks
theme-mv github Jazqa adwaita-tweaks master Adwaita-tweaks

# Amber
# https://github.com/lassekongo83/amber-theme
theme-mv github lassekongo83 amber-theme master Amber

# Ant
# https://github.com/EliverLara/Ant
theme-mv github EliverLara Ant master Ant

# Aqua
# https://github.com/EliverLara/Aqua
theme-mv github EliverLara Aqua master Aqua

# Arc
# https://github.com/NicoHood/arc-theme
# Requirements: autoconf automake pkg-config libgtk-3-dev gtk2-engines-murrine
#
# Supports configurations settings, e.g. a variant with transparency disabled:
#
#	ARC_ARGS='
#		--disable-transparency' \
#	./install-gnome-themes
AUTOGEN_ARGS=$ARC_ARGS \
theme-autogen-prefix github NicoHood arc-theme master \
	Arc \
	Arc-Dark \
	Arc-Darker

# Arc-Flatabulous
# https://github.com/andreisergiu98/arc-flatabulous-theme
# Requirements: autoconf automake pkg-config libgtk-3-dev gtk2-engines-murrine
#
# Supports configurations settings, e.g. a variant with transparency disabled:
#
#	ARC_FLATABULOUS_ARGS='
#		--disable-transparency' \
#	./install-gnome-themes
AUTOGEN_ARGS=$ARC_FLATABULOUS_ARGS \
theme-autogen-prefix github andreisergiu98 arc-flatabulous-theme master \
	Arc-Flatabulous \
	Arc-Flatabulous-Dark \
	Arc-Flatabulous-Darker


# Blue-Face
# https://github.com/Vistaus/Blue-Face
theme-mv github Vistaus Blue-Face master Blue-Face

# Breeze
# https://github.com/dirruk1/gnome-breeze
# Requirements: gtk2-engines-pixbuf
theme-cp github dirruk1 gnome-breeze master \
	Breeze-gtk \
	Breeze-dark-gtk

# Candra
# https://github.com/killhellokitty/Candra-Themes-3.20
# Requirements: gnome-themes-standard gtk2-engines-murrine gtk2-engines-pixbuf
theme-cp github killhellokitty Candra-Themes-3.20 master \
	Candra-Theme-3.20 \
	Candra-Theme-3.20-Dark \
	Candra-Theme-3.20-Darker

# Canta
# https://github.com/vinceliuice/Canta-theme
theme-script github vinceliuice Canta-theme master "
./install.sh --dest \"$THEMES\"
" \
	Canta \
	Canta-compact \
	Canta-square \
	Canta-compact-square \
	Canta-dark \
	Canta-dark-square \
	Canta-dark-compact \
	Canta-dark-compact-square \
	Canta-light \
	Canta-light-square \
	Canta-light-compact \
	Canta-light-compact-square

# Chrome-OS
# https://github.com/Elbullazul/Chrome-OS
theme-mv github Elbullazul Chrome-OS master Chrome-OS

# Ciliora-Secunda
# https://github.com/zagortenay333/ciliora-secunda-shell
theme-cp github zagortenay333 ciliora-secunda-shell master Ciliora-Secunda

# Ciliora-Tertia
# https://github.com/zagortenay333/ciliora-tertia-shell
theme-cp github zagortenay333 ciliora-tertia-shell master Ciliora-Tertia

# Cloak
# https://github.com/killhellokitty/Cloak-3.22
# Requirements: gnome-themes-standard gtk2-engines-murrine gtk2-engines-pixbuf
theme-cp github killhellokitty Cloak-3.22 master Cloak-3.22

# EvoPop
# https://github.com/solus-cold-storage/evopop-gtk-theme
theme-autogen-destdir github solus-cold-storage evopop-gtk-theme master \
	EvoPop \
	EvoPop-Azure	

# Fresh-Finesse
# https://github.com/Vistaus/Fresh-Finesse
theme-cp github Vistaus Fresh-Finesse master Fresh-Finesse

# Greybird
# https://github.com/shimmerproject/Greybird
# Requirements: autoconf automake libgdk-pixbuf2.0-dev libglib2.0-bin sass
theme-autogen-prefix github shimmerproject Greybird master \
	Greybird \
	Greybird-accessibility \
	Greybird-bright \
	Greybird-compact

# macOS-Sierra
# https://github.com/Elbullazul/macOS-Sierra
theme-mv github Elbullazul macOS-Sierra master macOS-Sierra

# Materia (formerly Flat-Plat)
# https://github.com/nana-4/materia-theme
theme-script github nana-4 materia-theme master "
chmod +x install.sh &&
./install.sh --dest \"$THEMES\" &>> \"$LOG\"
" \
	Materia \
	Materia-compact \
	Materia-dark \
	Materia-dark-compact \
	Materia-light \
	Materia-light-compact

# Minwaita
# https://github.com/godlyranchdressing/Minwaita
#
# Supports variants, e.g. choosing the Minwaita variant:
#
#       MINWAITA_VARIANT=Minwaita-OSX \
#       ./install-gnome-themes
MINWAITA_VARIANT=${MINWAITA_VARIANT:-Minwaita}
theme-tarball github godlyranchdressing Minwaita master Compiled.tar.gz "Compiled/$MINWAITA_VARIANT" \
	Minwaita \
	Minwaita-Dark \
	Minwaita-Darker \
	Minwaita-Light-Shell

# Numix
# https://github.com/numixproject/numix-gtk-theme
# Requirements: automake libglib2.0-bin libgdk-pixbuf2.0-dev sass
theme-make github numixproject numix-gtk-theme master Numix

# Numix-Base16-Ocean
# https://gitlab.com/commonacc/numix-base16-ocean
# Requirements: automake libglib2.0-bin libgdk-pixbuf2.0-dev sass
theme-make gitlab commonacc numix-base16-ocean master Numix-Base16-Ocean

# OSX-Arc-Darker
# https://github.com/rufkeya/OSX-Arc-Darker
# Requirements: gnome-themes-standard gtk2-engines-murrine
theme-mv github rufkeya OSX-Arc-Darker master OSX-Arc-Darker

# Paper
# https://github.com/snwh/paper-gtk-theme
# Requirements: automake automake
theme-autogen-destdir github snwh paper-gtk-theme master Paper

# Plano
# https://github.com/lassekongo83/plano-theme
# Requirements: gtk2-engines-murrine gtk2-engines-pixbuf fonts-roboto
theme-mv github lassekongo83 plano-theme master Plano

# Plata
# https://gitlab.com/tista500/plata-theme
# Requirements: autoconf automake inkscape libgdk-pixbuf2.0-dev libglib2.0-dev librsvg2-dev libsass0 libxml2-utils pkg-config sassc
#
# Supports configurations settings, e.g. a variant with colors red500, red300, bluegrey300, bluegrey500:
#
#	PLATA_ARGS='
#		--with-selection_color=#F44336
#		--with-accent_color=#90A4AE
#		--with-suggestion_color=#607D8B' \
#		--with-destruction_color=#FF5252' \
#	./install-gnome-themes
AUTOGEN_ARGS="--disable-cinnamon --disable-xfce --disable-mate --disable-openbox --enable-chrome $PLATA_ARGS" \
theme-autogen-prefix gitlab tista500 plata-theme master \
	Plata \
	Plata-Compact \
	Plata-Lumine \
	Plata-Lumine-Compact \
	Plata-Noir \
	Plata-Noir-Compact

# Pocillo
# https://github.com/UbuntuBudgie/pocillo-gtk-theme
# Requirements: automake inkscape optipng ...
theme-make-destdir github UbuntuBudgie pocillo-gtk-theme master \
	Pocillo \
	Pocillo-dark \
	Pocillo-dark-slim \
	Pocillo-light \
	Pocillo-light-slim \
	Pocillo-slim     

# Pop
# https://github.com/pop-os/gtk-theme
# Requirements: automake sassc
theme-make-destdir github pop-os gtk-theme master \
	Pop \
	Pop-slim \
	Pop-dark \
	Pop-dark-slim \
	Pop-light \
	Pop-light-slim

# Qogir
# https://github.com/vinceliuice/Qogir-theme
theme-script github vinceliuice Qogir-theme master "
./Install --dest \"$THEMES\"
" \
	Qogir \
	Qogir-dark \
	Qogir-light \
	Qogir-gnome \
	Qogir-gnome-dark \
	Qogir-gnome-light

# Redmond-Themes
# https://github.com/B00merang-Project/Redmond-Themes
theme-cp github B00merang-Project Redmond-Themes master \
	"Windows 3.11" \
	"Windows 3.x" \
	"Windows 8.1" \
	"Windows 95" \
	"Windows 9x" \
	"Windows Vista"

# Typewriter
# https://github.com/logico-dev/typewriter-gtk/
theme-mv-dir github logico-dev typewriter-gtk master Typewriter

# United GNOME
# https://github.com/godlyranchdressing/United-GNOME
#
# Supports variants, e.g. choosing the Manjaro variant:
#
#       UNITED_GNOME_VARIANT=Manjaro \
#       ./install-gnome-themes
UNITED_GNOME_VARIANT=${UNITED_GNOME_VARIANT:-$OS}
# Do case-correction on variant name
[ "${UNITED_GNOME_VARIANT}" = "openSUSE" ] && UNITED_GNOME_VARIANT=Opensuse
theme-script github godlyranchdressing United-GNOME master "
tar xf Compiled.tar.gz &>> \"$LOG\" &&
cp --recursive \"Compiled/United-$UNITED_GNOME_VARIANT/\"* \"$THEMES/\" &>> \"$LOG\"
" \
	"United-$UNITED_GNOME_VARIANT" \
	"United-$UNITED_GNOME_VARIANT-Light" \
	"United-$UNITED_GNOME_VARIANT-Darker" \
	"United-$UNITED_GNOME_VARIANT-Dark" 

# Unity7
# https://github.com/B00merang-Project/unity7
theme-mv github B00merang-Project unity7 master Unity7

# Unity8
# https://github.com/B00merang-Project/unity8
theme-mv github B00merang-Project unity8 master Unity8

# Vertex
# BROKEN: https://github.com/horst3180/vertex-theme/issues/227
# https://github.com/horst3180/vertex-theme
# Requirements: autoconf automake pkg-config libgtk-3-dev gtk2-engines-murrine
#theme-autogen-prefix github horst3180 vertex-theme master \
#	Vertex \
#	Vertex-Light \
#	Vertex-Dark

# Vimix
# https://github.com/vinceliuice/vimix-gtk-themes
# Requirements: gtk2-engines-murrine gtk2-engines-pixbuf
theme-execute github vinceliuice vimix-gtk-themes master Install \
	vimix \
	vimix-beryl \
	vimix-dark \
	vimix-dark-beryl \
	vimix-dark-doder \
	vimix-dark-laptop \
	vimix-dark-laptop-beryl \
	vimix-dark-laptop-doder \
	vimix-dark-laptop-ruby \
	vimix-dark-ruby \
	vimix-doder \
	vimix-laptop \
	vimix-laptop-beryl \
	vimix-laptop-doder \
	vimix-laptop-ruby \
	vimix-light \
	vimix-light-beryl \
	vimix-light-doder \
	vimix-light-laptop \
	vimix-light-laptop-beryl \
	vimix-light-laptop-doder \
	vimix-light-laptop-ruby \
	vimix-light-ruby \
	vimix-ruby

# Xenlism-Minimalism
# https://github.com/xenlism/minimalism
theme-mv-dir github xenlism Minimalism master themes/Xenlism-Minimalism

# Yaru
# https://github.com/ubuntu/yaru
theme-script github ubuntu yaru master "
meson _build --prefix \"\$PWD\"/_deploy &&
cd _build &&
ninja install &&
cd ../_deploy/share &&
mv themes/Yaru \"$THEMES\" &&
mv gnome-shell/theme/Yaru \"$THEMES\"/Yaru/gnome-shell
" Yaru

# Zuki
# https://github.com/lassekongo83/zuki-themes
# Requirements: gtk2-engines-murrine gtk2-engines-pixbuf fonts-roboto
theme-cp github lassekongo83 zuki-themes master \
	Zukitre \
	Zukitwo \
	Zuki-shell
